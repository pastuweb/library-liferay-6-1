/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.appuntivari.mylibrary.model.impl;

import com.appuntivari.mylibrary.model.MyLibrary;
import com.appuntivari.mylibrary.model.MyLibraryModel;
import com.appuntivari.mylibrary.model.MyLibrarySoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the MyLibrary service. Represents a row in the &quot;AV_MyLibrary&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.appuntivari.mylibrary.model.MyLibraryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MyLibraryImpl}.
 * </p>
 *
 * @author Pasturenzi Francesco
 * @see MyLibraryImpl
 * @see com.appuntivari.mylibrary.model.MyLibrary
 * @see com.appuntivari.mylibrary.model.MyLibraryModel
 * @generated
 */
@JSON(strict = true)
public class MyLibraryModelImpl extends BaseModelImpl<MyLibrary>
	implements MyLibraryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a my library model instance should use the {@link com.appuntivari.mylibrary.model.MyLibrary} interface instead.
	 */
	public static final String TABLE_NAME = "AV_MyLibrary";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_book", Types.BIGINT },
			{ "titolo", Types.VARCHAR },
			{ "descrizione", Types.VARCHAR },
			{ "autori", Types.VARCHAR },
			{ "stato", Types.VARCHAR },
			{ "link_more_info", Types.VARCHAR },
			{ "note", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table AV_MyLibrary (id_book LONG not null primary key,titolo VARCHAR(75) null,descrizione VARCHAR(75) null,autori VARCHAR(75) null,stato VARCHAR(75) null,link_more_info VARCHAR(75) null,note VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table AV_MyLibrary";
	public static final String ORDER_BY_JPQL = " ORDER BY myLibrary.id_book DESC";
	public static final String ORDER_BY_SQL = " ORDER BY AV_MyLibrary.id_book DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.appuntivari.mylibrary.model.MyLibrary"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.appuntivari.mylibrary.model.MyLibrary"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.appuntivari.mylibrary.model.MyLibrary"),
			true);
	public static long AUTORI_COLUMN_BITMASK = 1L;
	public static long STATO_COLUMN_BITMASK = 2L;
	public static long TITOLO_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static MyLibrary toModel(MyLibrarySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		MyLibrary model = new MyLibraryImpl();

		model.setId_book(soapModel.getId_book());
		model.setTitolo(soapModel.getTitolo());
		model.setDescrizione(soapModel.getDescrizione());
		model.setAutori(soapModel.getAutori());
		model.setStato(soapModel.getStato());
		model.setLink_more_info(soapModel.getLink_more_info());
		model.setNote(soapModel.getNote());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<MyLibrary> toModels(MyLibrarySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<MyLibrary> models = new ArrayList<MyLibrary>(soapModels.length);

		for (MyLibrarySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.appuntivari.mylibrary.model.MyLibrary"));

	public MyLibraryModelImpl() {
	}

	public long getPrimaryKey() {
		return _id_book;
	}

	public void setPrimaryKey(long primaryKey) {
		setId_book(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id_book);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return MyLibrary.class;
	}

	public String getModelClassName() {
		return MyLibrary.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id_book", getId_book());
		attributes.put("titolo", getTitolo());
		attributes.put("descrizione", getDescrizione());
		attributes.put("autori", getAutori());
		attributes.put("stato", getStato());
		attributes.put("link_more_info", getLink_more_info());
		attributes.put("note", getNote());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id_book = (Long)attributes.get("id_book");

		if (id_book != null) {
			setId_book(id_book);
		}

		String titolo = (String)attributes.get("titolo");

		if (titolo != null) {
			setTitolo(titolo);
		}

		String descrizione = (String)attributes.get("descrizione");

		if (descrizione != null) {
			setDescrizione(descrizione);
		}

		String autori = (String)attributes.get("autori");

		if (autori != null) {
			setAutori(autori);
		}

		String stato = (String)attributes.get("stato");

		if (stato != null) {
			setStato(stato);
		}

		String link_more_info = (String)attributes.get("link_more_info");

		if (link_more_info != null) {
			setLink_more_info(link_more_info);
		}

		String note = (String)attributes.get("note");

		if (note != null) {
			setNote(note);
		}
	}

	@JSON
	public long getId_book() {
		return _id_book;
	}

	public void setId_book(long id_book) {
		_columnBitmask = -1L;

		_id_book = id_book;
	}

	@JSON
	public String getTitolo() {
		if (_titolo == null) {
			return StringPool.BLANK;
		}
		else {
			return _titolo;
		}
	}

	public void setTitolo(String titolo) {
		_columnBitmask |= TITOLO_COLUMN_BITMASK;

		if (_originalTitolo == null) {
			_originalTitolo = _titolo;
		}

		_titolo = titolo;
	}

	public String getOriginalTitolo() {
		return GetterUtil.getString(_originalTitolo);
	}

	@JSON
	public String getDescrizione() {
		if (_descrizione == null) {
			return StringPool.BLANK;
		}
		else {
			return _descrizione;
		}
	}

	public void setDescrizione(String descrizione) {
		_descrizione = descrizione;
	}

	@JSON
	public String getAutori() {
		if (_autori == null) {
			return StringPool.BLANK;
		}
		else {
			return _autori;
		}
	}

	public void setAutori(String autori) {
		_columnBitmask |= AUTORI_COLUMN_BITMASK;

		if (_originalAutori == null) {
			_originalAutori = _autori;
		}

		_autori = autori;
	}

	public String getOriginalAutori() {
		return GetterUtil.getString(_originalAutori);
	}

	@JSON
	public String getStato() {
		if (_stato == null) {
			return StringPool.BLANK;
		}
		else {
			return _stato;
		}
	}

	public void setStato(String stato) {
		_columnBitmask |= STATO_COLUMN_BITMASK;

		if (_originalStato == null) {
			_originalStato = _stato;
		}

		_stato = stato;
	}

	public String getOriginalStato() {
		return GetterUtil.getString(_originalStato);
	}

	@JSON
	public String getLink_more_info() {
		if (_link_more_info == null) {
			return StringPool.BLANK;
		}
		else {
			return _link_more_info;
		}
	}

	public void setLink_more_info(String link_more_info) {
		_link_more_info = link_more_info;
	}

	@JSON
	public String getNote() {
		if (_note == null) {
			return StringPool.BLANK;
		}
		else {
			return _note;
		}
	}

	public void setNote(String note) {
		_note = note;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			MyLibrary.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public MyLibrary toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (MyLibrary)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	public MyLibrary toUnescapedModel() {
		return (MyLibrary)this;
	}

	@Override
	public Object clone() {
		MyLibraryImpl myLibraryImpl = new MyLibraryImpl();

		myLibraryImpl.setId_book(getId_book());
		myLibraryImpl.setTitolo(getTitolo());
		myLibraryImpl.setDescrizione(getDescrizione());
		myLibraryImpl.setAutori(getAutori());
		myLibraryImpl.setStato(getStato());
		myLibraryImpl.setLink_more_info(getLink_more_info());
		myLibraryImpl.setNote(getNote());

		myLibraryImpl.resetOriginalValues();

		return myLibraryImpl;
	}

	public int compareTo(MyLibrary myLibrary) {
		int value = 0;

		if (getId_book() < myLibrary.getId_book()) {
			value = -1;
		}
		else if (getId_book() > myLibrary.getId_book()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof MyLibrary)) {
			return false;
		}

		MyLibrary myLibrary = (MyLibrary)obj;

		long primaryKey = myLibrary.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		MyLibraryModelImpl myLibraryModelImpl = this;

		myLibraryModelImpl._originalTitolo = myLibraryModelImpl._titolo;

		myLibraryModelImpl._originalAutori = myLibraryModelImpl._autori;

		myLibraryModelImpl._originalStato = myLibraryModelImpl._stato;

		myLibraryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<MyLibrary> toCacheModel() {
		MyLibraryCacheModel myLibraryCacheModel = new MyLibraryCacheModel();

		myLibraryCacheModel.id_book = getId_book();

		myLibraryCacheModel.titolo = getTitolo();

		String titolo = myLibraryCacheModel.titolo;

		if ((titolo != null) && (titolo.length() == 0)) {
			myLibraryCacheModel.titolo = null;
		}

		myLibraryCacheModel.descrizione = getDescrizione();

		String descrizione = myLibraryCacheModel.descrizione;

		if ((descrizione != null) && (descrizione.length() == 0)) {
			myLibraryCacheModel.descrizione = null;
		}

		myLibraryCacheModel.autori = getAutori();

		String autori = myLibraryCacheModel.autori;

		if ((autori != null) && (autori.length() == 0)) {
			myLibraryCacheModel.autori = null;
		}

		myLibraryCacheModel.stato = getStato();

		String stato = myLibraryCacheModel.stato;

		if ((stato != null) && (stato.length() == 0)) {
			myLibraryCacheModel.stato = null;
		}

		myLibraryCacheModel.link_more_info = getLink_more_info();

		String link_more_info = myLibraryCacheModel.link_more_info;

		if ((link_more_info != null) && (link_more_info.length() == 0)) {
			myLibraryCacheModel.link_more_info = null;
		}

		myLibraryCacheModel.note = getNote();

		String note = myLibraryCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			myLibraryCacheModel.note = null;
		}

		return myLibraryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{id_book=");
		sb.append(getId_book());
		sb.append(", titolo=");
		sb.append(getTitolo());
		sb.append(", descrizione=");
		sb.append(getDescrizione());
		sb.append(", autori=");
		sb.append(getAutori());
		sb.append(", stato=");
		sb.append(getStato());
		sb.append(", link_more_info=");
		sb.append(getLink_more_info());
		sb.append(", note=");
		sb.append(getNote());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.appuntivari.mylibrary.model.MyLibrary");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id_book</column-name><column-value><![CDATA[");
		sb.append(getId_book());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>titolo</column-name><column-value><![CDATA[");
		sb.append(getTitolo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descrizione</column-name><column-value><![CDATA[");
		sb.append(getDescrizione());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>autori</column-name><column-value><![CDATA[");
		sb.append(getAutori());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stato</column-name><column-value><![CDATA[");
		sb.append(getStato());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>link_more_info</column-name><column-value><![CDATA[");
		sb.append(getLink_more_info());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note</column-name><column-value><![CDATA[");
		sb.append(getNote());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = MyLibrary.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			MyLibrary.class
		};
	private long _id_book;
	private String _titolo;
	private String _originalTitolo;
	private String _descrizione;
	private String _autori;
	private String _originalAutori;
	private String _stato;
	private String _originalStato;
	private String _link_more_info;
	private String _note;
	private long _columnBitmask;
	private MyLibrary _escapedModel;
}